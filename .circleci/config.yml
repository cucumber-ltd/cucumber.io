version: 2.1
executors:
  ruby:
    docker:
    - image: circleci/ruby:2.6.3
  working_directory: ~/cucumber.io

commands:
  gems:
    description: "Install gems needed for testing"
    steps:
      - restore_cache:
          keys:
            - v2-gemfile-{{ checksum "Gemfile.lock" }}
      - run: gem install bundler
      - run: bundle install --path vendor/bundle
      - save_cache:
          key: v2-gemfile-{{ checksum "Gemfile.lock" }}
          when: on_success
          paths:
            - ~/cucumber.io/vendor/bundle
  
  rspec:
    description: "Run rspec tests"
    parameters:
      base_url:
        type: string
        default: "http://localhost:9001"
    steps:
      - run: BASE_URL=<< parameters.base_url >> bundle exec parallel_rspec spec/
  
  nginx:
    description: "Install and configure NGINX for testing"
    steps:
      - run: sudo apt-get install nginx
      - run: sed -i -e "s|\$PORT|9001|" -e "s|\$NAME|localhost|" ./nginx/server.conf
      - run: sed -i "1d" ./nginx/nginx.conf
      - run: sed -i "31d" ./nginx/nginx.conf
      - run: sudo cp nginx/*.conf /etc/nginx/
      - run: sudo mkdir /home/www
      - run: sudo cp -a static/robots/robots.txt /home/www
      - run: sudo cp -a static/sitemaps/* /home/www
      - run: sudo nginx
  
  docker:
    description: "Setup, build, and login to Docker"
    steps:
      - setup_remote_docker
      - run: docker build -t web .
      - run: docker login --username=$HEROKU_LOGIN --password=$HEROKU_API_KEY registry.heroku.com

  heroku:
    description: "Install heroku CLI then push and release the Heroku app"
    parameters:
      app:
        type: string
        default: "cucumber-io-proxy"
    steps:
      - run: curl https://cli-assets.heroku.com/install.sh | sh
      - run: heroku container:push web --app << parameters.app >>
      - run: heroku container:release web --app << parameters.app >>
  
  generate_sitemaps:
    description: "Checks to see if our sitemaps are out of date and regenerates them along with our pages map if they are"
    steps:
      - run: make generate_sitemaps

jobs:
  prod_build_and_deploy:
    executor: ruby
    steps:
      - checkout
      - docker
      - heroku:
          app: "cucumber-io-proxy"
  
  staging_build_and_deploy:
    executor: ruby
    steps:
      - checkout
      - docker
      - heroku:
          app: "cucumber-io-proxy-staging"

  local_test:
    executor: ruby
    steps:
      - checkout
      - nginx
      - gems
      - rspec
  
  staging_test:
    executor: ruby
    steps:
      - checkout
      - gems
      - rspec:
          base_url: "https://cucumber-io-proxy-staging.herokuapp.com"
  
  generate_sitemaps:
    executor: ruby
    steps:
      - checkout
      - gems
      - generate_sitemaps

workflows:
  version: 2
  test:
    jobs:
      - local_test
      - staging_build_and_deploy:
          requires:
            - local_test
      - staging_test:
          requires:
            - staging_build_and_deploy
      - generate_sitemaps:
          requires:
            - local_test
            - staging_test
          filters:
            branches:
              only: master
      - prod_build_and_deploy:
          requires:
            - generate_sitemaps
          filters:
            branches:
              only: master

  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - generate_sitemaps
      - prod_build_and_deploy:
          requires:
            - generate_sitemaps
